version: '3.9'

services:
  api:
    build: .
    image: gmoroz/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    command: >
      sh -c "python /code/todolist/manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./todolist:/code/todolist/
    ports:
      - 8000:8000
    env_file:
      - .env.docker
    depends_on:
      db:
          condition: service_healthy
      migration:
          condition: service_completed_successfully
  migration:
    build: .
    image: gmoroz/todolist:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    command: python /code/todolist/manage.py migrate
    volumes:
      - ./todolist:/code/todolist/
    env_file:
      - .env.docker
    depends_on:
      db:
        condition: service_healthy
  frontend:
    build: ./frontend
    image: gmoroz/todolist
    volumes:
      - frontend:/app/build
    depends_on:
      - db    
  db:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_DB=$POSTGRES_DB
    restart: always
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  frontend: